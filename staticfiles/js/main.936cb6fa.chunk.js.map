{"version":3,"sources":["components/header.js","components/FormContainer.js","components/LoginScreen.js","components/register.js","components/modal.js","components/todo.js","components/logout.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","isAuth","setIsAuth","useEffect","localStorage","getItem","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","FormContainer","children","Row","Col","xs","md","LoginScreen","email","setEmail","password","setPassword","window","location","replace","submitHandler","e","a","preventDefault","config","headers","axios","post","data","token","clear","setItem","history","push","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","RegisterScreen","name","setName","confirmPassword","setConfirmPassword","setMessage","key","required","CustomModal","handleChange","checked","activeItem","state","setState","this","toggle","onSave","Modal","isOpen","ModalHeader","ModalBody","FormGroup","for","Input","title","description","check","completed","ModalFooter","color","onClick","Component","todoItems","Todo","refreshList","get","then","res","todoList","catch","err","console","log","modal","handleSubmit","item","put","handleDelete","delete","createItem","editItem","displayCompleted","status","viewCompleted","renderTabList","renderItems","filter","map","Logout","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.936cb6fa.chunk.js","sourcesContent":["import {useState,useEffect} from 'react'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction Header(props) {\r\n\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token') !== null) {\r\n          setIsAuth(true);\r\n        }\r\n      }, []);\r\n\r\n\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Todo</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          \r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            {/* LinkContainer to='/'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Todo</Nav.Link>\r\n                            </LinkContainer>< */}\r\n\r\n                            {isAuth ? (\r\n                                 <LinkContainer to='/logout'>\r\n                                 <Nav.Link><i className=\"fas fa-user\"  ></i>Logout</Nav.Link>\r\n                             </LinkContainer>\r\n                                   \r\n                             \r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nimport FormContainer from './FormContainer'\r\n\r\nfunction LoginScreen(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n  \r\n    useEffect(() => {\r\n        if (localStorage.getItem('token') !== null) {\r\n          window.location.replace('http://localhost:3000/todo');\r\n        }\r\n      }, []);\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n        // console.log('data',data)\r\n        if (data.token){\r\n            localStorage.clear();\r\n          localStorage.setItem('token', data.token);\r\n            props.history.push('/')\r\n        }\r\n        else {\r\n            setEmail('')\r\n            setPassword('')\r\n            localStorage.clear()\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n         \r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to='/signup'>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","  \r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport axios from 'axios'\r\nimport FormContainer from './FormContainer'\r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n  \r\n\r\n  \r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token') !== null) {\r\n            window.location.replace('http://localhost:3000/todo');\r\n          } \r\n    }, [])\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.post(\r\n                '/api/register/',\r\n                { 'name': name, 'email': email, 'password': password },\r\n                config\r\n            )\r\n            if (data.token){\r\n                localStorage.clear();\r\n              localStorage.setItem('token', data.key);\r\n              window.location.replace('http://localhost:3000/todo');\r\n            }\r\n            else {\r\n                setName('')\r\n                setConfirmPassword('')\r\n                setEmail('')\r\n                setPassword('')\r\n                localStorage.clear()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n           \r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={'/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default  RegisterScreen","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nexport default class CustomModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeItem: this.props.activeItem,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      value = e.target.checked;\r\n    }\r\n\r\n    const activeItem = { ...this.state.activeItem, [name]: value };\r\n\r\n    this.setState({ activeItem });\r\n  };\r\n\r\n  render() {\r\n    const { toggle, onSave } = this.props;\r\n\r\n    return (\r\n      <Modal isOpen={true} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"todo-title\">Title</Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"todo-title\"\r\n                name=\"title\"\r\n                value={this.state.activeItem.title}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Todo Title\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"todo-description\">Description</Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"todo-description\"\r\n                name=\"description\"\r\n                value={this.state.activeItem.description}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Todo description\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  name=\"completed\"\r\n                  checked={this.state.activeItem.completed}\r\n                  onChange={this.handleChange}\r\n                />\r\n                Completed\r\n              </Label>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"success\"\r\n            onClick={() => onSave(this.state.activeItem)}\r\n          >\r\n            Save\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport axios from \"axios\";\r\nimport {Button} from 'react-bootstrap'\r\n\r\nconst todoItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Go to Market\",\r\n    description: \"Buy ingredients to prepare dinner\",\r\n    completed: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Study\",\r\n    description: \"Read Algebra and History textbook for the upcoming test\",\r\n    completed: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Sammy's books\",\r\n    description: \"Go to library to return Sammy's books\",\r\n    completed: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Article\",\r\n    description: \"Write article on how to use Django with React\",\r\n    completed: false,\r\n  },\r\n];\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todoList: [],\r\n      viewCompleted: false,\r\n      todoList: todoItems,\r\n      modal: false,\r\n      activeItem: {\r\n        title: \"\",\r\n        description: \"\",\r\n        completed: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshList()\r\n  \r\n  }\r\n\r\n  refreshList = () => {\r\n\r\n    let token  = localStorage.getItem('token')\r\n    const config = {\r\n      headers: {\r\n          'Content-type': 'application/json' ,\r\n          'Authorization' : `Bearer ${token}`\r\n      }\r\n  }\r\n\r\n    axios\r\n      .get(\"/api/todo/\",config)\r\n      .then((res) => this.setState({ todoList: res.data }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n\r\n  handleSubmit = (item) => {\r\n    let token  = localStorage.getItem('token')\r\n    const config = {\r\n      headers: {\r\n          'Content-type': 'application/json' ,\r\n          'Authorization' : `Bearer ${token}`\r\n      }\r\n  }\r\n\r\n    this.toggle();\r\n    if (item.id) {\r\n      axios\r\n        .put(`/api/todo/${item.id}/`, item,config)\r\n        .then((res) => this.refreshList());\r\n      return;\r\n    }\r\n      axios\r\n      .post(\"/api/todo/\", item,config)\r\n      .then((res) => this.refreshList());\r\n    \r\n\r\n    \r\n  };\r\n\r\n  handleDelete = (item) => {\r\n    let token  = localStorage.getItem('token')\r\n    const config = {\r\n      headers: {\r\n          'Content-type': 'application/json' ,\r\n          'Authorization' : `Bearer ${token}`\r\n      }\r\n  }\r\n\r\n    axios\r\n    .delete(`/api/todo/${item.id}/`,config)\r\n    .then((res) => this.refreshList());\r\n  };\r\n\r\n  createItem = () => {\r\n    const item = { title: \"\", description: \"\", completed: false };\r\n\r\n    this.setState({ activeItem: item, modal: !this.state.modal });\r\n  };\r\n\r\n  editItem = (item) => {\r\n    this.setState({ activeItem: item, modal: !this.state.modal });\r\n  };\r\n\r\n  displayCompleted = (status) => {\r\n    if (status) {\r\n      return this.setState({ viewCompleted: true });\r\n    }\r\n\r\n    return this.setState({ viewCompleted: false });\r\n  };\r\n\r\n  renderTabList = () => {\r\n    return (\r\n      <div className=\"nav nav-tabs\">\r\n        <span\r\n          className={this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"}\r\n          onClick={() => this.displayCompleted(true)}\r\n        >\r\n          Complete\r\n        </span>\r\n        <span\r\n          className={this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"}\r\n          onClick={() => this.displayCompleted(false)}\r\n        >\r\n          Incomplete\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderItems = () => {\r\n    const { viewCompleted } = this.state;\r\n    const newItems = this.state.todoList.filter(\r\n      (item) => item.completed == viewCompleted\r\n    );\r\n\r\n    return newItems.map((item) => (\r\n      <li\r\n        key={item.id}\r\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n      >\r\n        <span\r\n          className={`todo-title mr-2 ${\r\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\r\n          }`}\r\n          title={item.description}\r\n        >\r\n          {item.title}\r\n        </span>\r\n        <span>\r\n          <button\r\n            className=\"btn btn-secondary mr-2\"\r\n            onClick={() => this.editItem(item)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => this.handleDelete(item)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </span>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\r\n            <div className=\"card p-3\">\r\n              <div className=\"mb-4\">\r\n             <Button variant='primary'  onClick={this.createItem}>\r\n                Add Task\r\n             </Button>\r\n              </div>\r\n              {this.renderTabList()}\r\n              <ul className=\"list-group list-group-flush border-top-0\">\r\n                {this.renderItems()}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.modal ? (\r\n          <Modal\r\n            activeItem={this.state.activeItem}\r\n            toggle={this.toggle}\r\n            onSave={this.handleSubmit}\r\n          />\r\n        ) : null}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;","import {useEffect} from 'react'\r\nconst Logout = (props) => {\r\n    useEffect(()=>{\r\n        localStorage.clear()\r\n        props.history.push('/login')\r\n    },[])\r\n\r\n\r\n    return (  <></>);\r\n}\r\n \r\nexport default Logout;","import { HashRouter  as Router, Switch, Route } from 'react-router-dom';\r\nimport Header from './components/header'\r\nimport LoginScreen from './components/LoginScreen'\r\nimport RegisterScreen from './components/register'\r\nimport Todo from './components/todo'\r\nimport Logout from './components/logout'\r\nconst App = () => {\r\n  return ( <div>\r\n        <Router>\r\n        <Header />\r\n     \r\n        <Switch>\r\n        <Route path='/' component={Todo} exact />\r\n          <Route path='/login' component={LoginScreen}  />\r\n          <Route path='/signup' component={RegisterScreen}  />\r\n          <Route path='/logout' component={Logout}  />\r\n         \r\n        </Switch>\r\n      </Router>\r\n  </div> );\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport './bootstrap.min.css'\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}